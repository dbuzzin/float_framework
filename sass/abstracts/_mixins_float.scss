// ==================================================
//
//                     Clearfix
//
// ==================================================

@mixin clearfix {
    &::after {
        content: "";
        display: block;
        clear: both;
    }
}

// ==================================================
//
//          Manage screen size breakpoints
//
// ==================================================

@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media (min-width: 320px) { @content };
    }
    @if $breakpoint == phone-mid {
        @media (min-width: 450px) { @content };
    }
    @if $breakpoint == tab-port {
        @media (min-width: 600px) { @content };
    }
    @if $breakpoint == tab-land {
        @media (min-width: 900px) { @content };
    }
}

// ==================================================
//
//         Control responsive column widths
//
// ==================================================

@mixin column-width($num-cols, $screen) {

    $calculated-width: calc(((100% - ((#{$grid-columns} / #{$num-cols}) - 1) * #{$gutter-x}) / (#{$grid-columns} / #{$num-cols})));

    @if $screen == sm {
        @include respond(phone) {
            .col-#{$screen}-#{$num-cols} {
                width: $calculated-width;
            }
        }
    }

    @if $screen == md {
        @include respond(tab-port) {
            .col-#{$screen}-#{$num-cols} {
                width: $calculated-width;
            }
            .#{$screen}-fillback { 
                transform: translateX(-50%); 
                margin-left: -($gutter-x / 2) ;
            }
        }
    }

    @if $screen == lg {
        @include respond(tab-land) {
            .col-#{$screen}-#{$num-cols} {
                width: $calculated-width;
            }
            .#{$screen}-normalise {
                transform: translateX(0);
                margin-left: 0;
            }
        }
    }
    
}

// ==================================================
//
//      Control the building of utility classes
//
// ==================================================

@mixin build-utilities($u, $num, $screen) {

    // ==================================================
    //
    //                Height and width
    //
    // ==================================================

    @if $screen = sm { // Small
        @if $u == h { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { height: #{$num}rem !important; }}}
        @if $u == w { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { width: #{$num}rem !important; }}}
    }

    @if $screen = md { // Medium
        @if $u == h { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { height: #{$num}rem !important; }}}
        @if $u == w { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { width: #{$num}rem !important; }}}
    }

    @if $screen = lg { // Large
        @if $u == h { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { height: #{$num}rem !important; }}}
        @if $u == w { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { width: #{$num}rem !important; }}}
    }

    // ==================================================
    //
    //                     Margins
    //
    // ==================================================

    @if $screen == sm { // Small
        @if $u == m { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { margin: #{$num}rem !important; }}}
        @if $u == mx { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { margin-left: #{$num}rem !important; margin-right: #{$num}rem !important; }}}
        @if $u == my { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { margin-top: #{$num}rem !important; margin-bottom: #{$num}rem !important; }}} 
        @if $u == mt { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { margin-top: #{$num}rem !important; }}}
        @if $u == mb { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { margin-bottom: #{$num}rem !important; }}}
        @if $u == ml { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { margin-left: #{$num}rem !important; }}}
        @if $u == mr { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { margin-right: #{$num}rem !important; }}} 
    }
    @if $screen == md { // Medium
        @if $u == m { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { margin: #{$num}rem !important; }}} 
        @if $u == mx { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { margin-left: #{$num}rem !important; margin-right: #{$num}rem !important; }}} 
        @if $u == my { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { margin-top: #{$num}rem !important; margin-bottom: #{$num}rem !important; }}} 
        @if $u == mt { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { margin-top: #{$num}rem !important; }}} 
        @if $u == mb { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { margin-bottom: #{$num}rem !important; }}} 
        @if $u == ml { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { margin-left: #{$num}rem !important; }}} 
        @if $u == mr { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { margin-right: #{$num}rem !important; }}} 
    }
    @if $screen == lg { // Large
        @if $u == m { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { margin: #{$num}rem !important; }}} 
        @if $u == mx { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { margin-left: #{$num}rem !important; margin-right: #{$num}rem !important; }}} 
        @if $u == my { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { margin-top: #{$num}rem !important; margin-bottom: #{$num}rem !important; }}} 
        @if $u == mt { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { margin-top: #{$num}rem !important; }}} 
        @if $u == mb { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { margin-bottom: #{$num}rem !important; }}} 
        @if $u == ml { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { margin-left: #{$num}rem !important; }}} 
        @if $u == mr { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { margin-right: #{$num}rem !important; }}} 
    }

    // ==================================================
    //
    //                     Padding
    //
    // ==================================================

    @if $screen == sm { // Small
        @if $u == p { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { padding: #{$num}rem !important; }}}
        @if $u == px { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { padding-left: #{$num}rem !important; padding-right: #{$num}rem !important; }}}
        @if $u == py { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { padding-top: #{$num}rem !important; padding-bottom: #{$num}rem !important; }}} 
        @if $u == pt { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { padding-top: #{$num}rem !important; }}}
        @if $u == pb { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { padding-bottom: #{$num}rem !important; }}}
        @if $u == pl { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { padding-left: #{$num}rem !important; }}}
        @if $u == pr { .#{$u}-#{$screen}-#{$num} { @include respond(phone) { padding-right: #{$num}rem !important; }}} 
    }
    @if $screen == md { // Medium
        @if $u == p { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { padding: #{$num}rem !important; }}} 
        @if $u == px { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { padding-left: #{$num}rem !important; padding-right: #{$num}rem !important; }}} 
        @if $u == py { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { padding-top: #{$num}rem !important; padding-bottom: #{$num}rem !important; }}} 
        @if $u == pt { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { padding-top: #{$num}rem !important; }}} 
        @if $u == pb { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { padding-bottom: #{$num}rem !important; }}} 
        @if $u == pl { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { padding-left: #{$num}rem !important; }}} 
        @if $u == pr { .#{$u}-#{$screen}-#{$num} { @include respond(tab-port) { padding-right: #{$num}rem !important; }}} 
    }
    @if $screen == lg { // Large
        @if $u == p { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { padding: #{$num}rem !important; }}} 
        @if $u == px { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { padding-left: #{$num}rem !important; padding-right: #{$num}rem !important; }}} 
        @if $u == py { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { padding-top: #{$num}rem !important; padding-bottom: #{$num}rem !important; }}} 
        @if $u == pt { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { padding-top: #{$num}rem !important; }}} 
        @if $u == pb { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { padding-bottom: #{$num}rem !important; }}} 
        @if $u == pl { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { padding-left: #{$num}rem !important; }}} 
        @if $u == pr { .#{$u}-#{$screen}-#{$num} { @include respond(tab-land) { padding-right: #{$num}rem !important; }}} 
    }
}